@using MvcPaging;
@model IPagedList<Deal>

@{
    ViewBag.Title = "List of expenses";
}

<h1>List of Deals</h1>

<p class="noprint">
    @Html.ActionLink("Create New Deal", "Create", null, new {@class="btn"})
</p>

@{Html.RenderPartial("SearchBoxItems", "Deal");}

<div class="pagingContainer noprint">
    @{
        RouteValueDictionary r = new RouteValueDictionary();
        r.Add("to", Request["to"]);
        r.Add("from", Request["from"]);
        r.Add("text", Request["text"]);
        }
    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, r)
</div>

<table class="zebra-striped">
    <thead>
        <th  width="25%">
            Description
        </th>
        <th>
            Category
        </th>
        <th>
            Store
        </th>
        <th>
            Date
        </th>
        <th>
            Expiry Date
        </th>
        <th class="noprint" width="200"></th>
    </thead>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @item.Category.Name
        </td>
        <td>
            <a href="@Url.Action("Details", "Provider", new { id= item.ProviderID})">
            @Html.DisplayFor(modelItem => item.Provider.Name)
            </a>
        </td>
        <td nowrap>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>
        <td nowrap>
            @Html.DisplayFor(modelItem => item.ExpiryDate)
        </td>

        <td class="noprint" nowrap>
            @Html.ActionLink("Edit", "Edit", new { id=item.DealID }, new { @class = "btn primary"}) 
            @Html.ActionLink("Details", "Details", new { id=item.DealID }, new { @class = "btn"}) 
            @Html.ActionLink("Delete", "Delete", new { id=item.DealID }, new { @class = "btn"})
        </td>
    </tr>
}


</table>
